@use "../component";
@use "../icons";
@use "../theme";
@use "../utility";

// Header is primarily arranged as a grid layout, which grid items being
// moved around within that grid at various breakpoints.
// Many of the grid items use flex layout within them.
header {
    // the HTML includes an h1 labelling the page, but it isn't
    // intended to be displayed
    h1 {
        display: none;
    }

    .content {
        // create grid layout
        @include utility.display-grid;
        @include utility.grid-columns(
            1fr
            utility.px-to-rem(70px)
            utility.px-to-rem(70px)
        );
        @include utility.grid-rows(
            utility.px-to-rem(70px)
            utility.px-to-rem(70px)
        );

        box-sizing: border-box;
        padding:
            utility.px-to-rem(20px)
            utility.px-to-rem(15px)
            utility.px-to-rem(5px);    

        // would set justify-items and align-items here, but it's
        // not supported in IE11 for grid, so will be using margins.
    }

    // for readability set all positions within grid explicitly here.
    // Mostly they could be auto assigned, but IE11 can't be trusted.
    .logo {
        @include utility.grid-column-pick(1, 2);
        @include utility.grid-row-pick(1, 2);
    }
    .phone {
        @include utility.grid-column-pick(2, 3);
        @include utility.grid-row-pick(1, 2);
    }
    .hamburger-menu {
        @include utility.grid-column-pick(3, 4);
        @include utility.grid-row-pick(1, 2);
    }
    form {
        // form fills bottom row entirely
        @include utility.grid-column-pick(1, 4);
        @include utility.grid-row-pick(2, 3);
    }

    .support {
        @include utility.button(
            $background-colour: theme.$primary-button-colour,
            $text-colour: theme.$primary-contrast,
            $font-size: theme.$header-button-size,
            $width: utility.px-to-rem(145px),
            $height: utility.px-to-rem(56px),
        );
        box-sizing: border-box;

        &::before {
            @include icons.icon(icons.icon-unicode-from-name("mouse"), 1.25em);
            padding-right: 0.5em;
        }

        &:hover {
            background-color: theme.$primary-button-hover-colour;
        }
    }
    .contact {
        @include utility.button(
            $background-colour: theme.$secondary-button-colour,
            $text-colour: theme.$primary-contrast,
            $font-size: theme.$header-button-size,
            $width: utility.px-to-rem(152px),
            $height: utility.px-to-rem(56px),
        );
        box-sizing: border-box;

        &::before {
            @include icons.icon(icons.icon-unicode-from-name("paper-plane"), 1.25em);
            padding-right: 0.5em;
        }

        &:hover {
            background-color: theme.$secondary-button-hover-colour;
        }
    }

    // at mobile breakpoint these buttons don't appear.
    .support,
    .contact {
        display: none;
    }

    .phone {
        color: theme.$primary;
        text-decoration: none;

        height: 100%;
        width: 100%;
        display: flex;
        flex-direction: column;

        // align-items and justify-content are supported for flex (not grid)
        // in IE11 (not IE10) so it is safe to use them
        align-items: center;
        justify-content: center;

        &::after {
            @include icons.icon(icons.icon-unicode-from-name("phone"), 1.7rem);
        }
        &:hover::after {
            text-decoration: underline;
        }
    }

    .logo {
        // align to left (justify-self doesn't work in IE11 grid)
        margin-right: auto;

        // center align vertically within grid cell
        @include utility.margin-y-center;

        flex: 0 1 auto;
        max-height: 100%;
    }
    img {
        max-width: 100%;
        box-sizing: border-box;
        padding-right: 60px;
    }

    .hamburger-menu,
    .contact,
    .support,
    form {
        // align to right of its grid cell
        margin-left: auto;

        // align vertically in its grid cell
        @include utility.margin-y-center;
    }

    .hamburger-menu {
        @include component.hamburger-menu;
    }

    form {
        width: 100%;
        height: utility.px-to-rem(47px);
        padding: 0;
        
        color: theme.$secondary;
        font-size: theme.$header-search-size;

        // positioned relative with no offset so it can anchor the absolute positioned button
        position: relative;

        input {
            @include utility.rounded-corners;

            box-sizing: border-box;
            width: 100%;
            height: 100%;
            border: 2px solid theme.$shadow-primary;
            background-color: theme.$shadow-primary;
            padding: 
                utility.px-to-rem(5px)
                2rem
                utility.px-to-rem(5px)
                0.9rem;
            
            &:focus {
                // by default uses outline to show focus, but not wanted in this design
                outline: none;
            }
        }

        button {
            position: absolute;
            right: 0.25rem;
            height: 100%;

            border: 0;
            background-color: transparent;

            cursor: pointer;

            color: theme.$primary;

            // generate search icon glyph as the button's text
            &::after {
                @include icons.icon(icons.icon-unicode-from-name("search"), 1.4rem);
            }
        }
    }

    // ---- breakpoints ----

    .content {
        @include theme.content-width-by-breakpoint($width-add: utility.px-to-rem(-30px));
    }

    // at first breakpoint:
    // - content is now fixed width (handled above by theme.content-width-by-breakpoint)
    // - phone icon is removed
    // - the search bar moves up to same line as logo and changes appearance
    @include theme.above-breakpoint("small") {
        // phone doesn't appear at all
        a.phone {
            display: none;
        }

        .content {
            @include utility.margin-x-center;
            padding: utility.px-to-rem(20px) 0;
            
            // grid layout changes, now just one row
            @include utility.grid-columns(
                1fr                         // logo
                utility.px-to-rem(237px)    // search
                utility.px-to-rem(80px)     // menu
            );
            @include utility.grid-rows(
                utility.px-to-rem(70px)
            );
            
            justify-items: end;
        }

        // rearrange grid items to suit the new single-row layout.
        .logo {
            // first column
            @include utility.grid-column-pick(1, 2);
        }
        form {
            // second column
            @include utility.grid-column-pick(2, 3);
        }
        .hamburger-menu{
            // final column
            @include utility.grid-column-pick(3, 4);
        }

        // place all items in first row
        .content > * {
            @include utility.grid-row-pick(1, 2);
        }

        // search form is styled differently when on the top row
        form {
            height: utility.px-to-rem(57px);

            display: flex;
            flex-direction: row;

            input,
            button {
                box-sizing: content-box;
                height: utility.px-to-rem(44px);
            }

            input {
                border: 1px solid theme.$secondary-button-colour;
                background-color: transparent;
                color: theme.$secondary;
                border-radius: 0;
                padding: utility.px-to-rem(5px) utility.px-to-rem(15px);

                flex: 1 0 utility.px-to-rem(60px);
                min-width: 0;
            }

            button {
                @include utility.rounded-corners-right;

                position: static;
                box-sizing: content-box;
                width: utility.px-to-rem(23px);
                padding: 
                    utility.px-to-rem(7px)
                    utility.px-to-rem(20px)
                    utility.px-to-rem(3px);
                
                // button doesn't grow to fill flex space
                flex: 0 0 utility.px-to-rem(20px);

                border: 1px solid theme.$secondary-button-colour;
                background-color: theme.$secondary-button-colour;

                color: theme.$primary-contrast;
                font-size: 1.55rem;

                &:hover {
                    background-color: theme.$secondary-button-hover-colour;
                    border-color: theme.$secondary-button-hover-colour;
                }
            }
        }
    }

    // at medium breakpoint:
    // - content fixed width increases
    // - search text input hidden, leaving only search button (clicking button should show text input, but that needs JS)
    // - support button appears
    // - contact button appears
    @include theme.above-breakpoint("medium") {
        .content {
            // grid layout changes again, adding more columns
            @include utility.grid-columns (
                1fr                         // logo
                utility.px-to-rem(165px)    // support
                utility.px-to-rem(172px)    // contact
                utility.px-to-rem(83px)     // search
                utility.px-to-rem(83px)     // menu
            );
        }

        // position grid items in correct column
        .logo {
            @include utility.grid-column-pick(1, 2);
        }
        .support {
            @include utility.grid-column-pick(2, 3);
        }
        .contact {
            @include utility.grid-column-pick(3, 4);
        }
        form {
            @include utility.grid-column-pick(4, 5);
        }
        .hamburger-menu {
            @include utility.grid-column-pick(5, 6);
        }

        // support and contact buttons appear
        .support,
        .contact {
            display: flex;
        }

        form {
            // no longer need to set width
            width: auto;

            // search text field is removed
            input {
                display: none;
            }

            button {
                // all corners on search button are rounded
                @include utility.rounded-corners;

                // align to the right
                margin-left: auto;
            }
        }
    }

    // at final breakpoint:
    // - content fixed width increases
    // - search text input appears again
    @include theme.above-breakpoint("large") {
        .content {
            // grid layout changes, adding more columns
            @include utility.grid-columns(
                1fr                         // logo
                utility.px-to-rem(160px)    // support
                utility.px-to-rem(172px)    // contact
                utility.px-to-rem(323px)    // search
                utility.px-to-rem(83px)     // menu
            );
        }

        // search input field reappears
        // will already have correct styling from the earlier breakpoints.
        form {
            box-sizing: border-box;
            width: 100%;
            padding-left: 20px;

            input {
                display: block;

                &:focus {
                    border-color: theme.$focus-colour;
                    
                    // inset shadow doesn't seem to appear within a text input field on Chrome,
                    // but does appear on Firefox. The effect is subtle either way.
                    box-shadow:
                        inset 0 1px 1px rgba(black, 0.075),
                        0 0 8px rgba(theme.$focus-colour, 0.6);
                }
            }

            // only right-side corners are rounded now that the search field is back
            button {
                border-radius: 0;
                @include utility.rounded-corners-right;

                // remove any space between button and search entry
                margin-left: 0;
            }
        }
    }
}
