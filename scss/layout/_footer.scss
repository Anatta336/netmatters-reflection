@use "../theme";
@use "../utility";
@use "../icons";

footer {
    // used in a couple of places where the value needs to be equal
    $section-padding-x: utility.px-to-rem(15px);

    background-color: theme.$dark;
    color: theme.$dark-contrast;
    font-size: theme.$footer-font-size;
    line-height: 1.375rem;

    padding-top: utility.px-to-rem(47px);
    padding-bottom: utility.px-to-rem(43px);

    .wrapper {
        @include utility.margin-x-center;

        // for the mobile breakpoint each flex item will take up a whole
        // row, but that will change as we move up through the breakpoints.
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;

        // width of wrapper depends on the breakpoint
        @each $breakpoint-name, $width in theme.$content-width-by-breakpoints {
            @include utility.above-breakpoint($breakpoint-name) {
                width: $width;
            }
        }
    }

    section {
        box-sizing: border-box;
        padding: 0 $section-padding-x;
        margin-bottom: utility.px-to-rem(30px);

        // width of each section within the footer depends on the breakpoint
        @each $breakpoint-name, $width in theme.$footer-section-width-by-breakpoints {
            @include utility.above-breakpoint($breakpoint-name) {
                width: $width;
            }
        }

        // remove bottom margin at largest breakpoint
        @include utility.above-breakpoint(utility.$largest-breakpoint-name) {
            margin-bottom: 0;
        }
    }

    // only underline anchor elements when they're hovered
    a {
        text-decoration: none;
        color: theme.$dark-contrast;
    }
    a:hover {
        text-decoration: underline;
    }

    // each section starts with an UPPERCASE h2 heading
    h2 {
        font-size: theme.$footer-heading-font-size;
        text-transform: uppercase;
        line-height: 1.1;
        margin: 0 0 utility.px-to-rem(26px);
    }

    // remove default bullet point list styling
    ul {
        padding: 0;
    }
    li {
        list-style: none;
    }

    address
    {
        // the address is given as a series of <span> elements, which should each be on a fresh line
        span {
            display: block;
            font-style: normal;
        }

        // want to include organisation and country name in the data, but not display it
        .org,
        .country-name {
            display: none;
        }

        // space between address block and the next item
        .adr {
            padding-bottom: 1rem;
        }

        // keep telephone and email data spans on same line as their label
        .tel,
        .email {
            display: inline;
        }
    }

    .social-media {
        // this section loses the usual padding so the social media buttons
        // can be aligned with that padding line from their own padding.
        padding: 0;
        h2 {
            padding-left: $section-padding-x;
        }

        // list container arranges social media buttons using wrapped flexbox layout
        ul {
            width: 100%;
            margin: utility.px-to-rem(-30px) 0 0;

            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-content: space-between;
        }

        // set content within each link according to its class
        @each $social-media-name, $icon-name in theme.$social-media-icons {
            $icon-code: icons.icon-unicode-for-social-media($social-media-name);
            a.#{$social-media-name}::before {
                @include icons.icon;
                content: $icon-code;

            }
        }
        
        li {
            // each item (including its padding) takes up half the available width
            display: block;
            box-sizing: border-box;
            width: 50%;
            padding: 0 $section-padding-x; 
        }
        a {
            // the text (a single icon glyph) is centered within the item
            @include utility.flex-center;
            background-color: theme.$quarter-opaque;
            height: utility.px-to-rem(55px);
            margin-top: utility.px-to-rem(30px);

            text-align: center;
            font-size: utility.px-to-rem(28px);
        }

        // colour changes on hover depending on class name matching a known social media brand
        @each $social-media-name, $colour in theme.$social-media-colours {
            a.#{$social-media-name}:hover {
                background-color: $colour;
                text-decoration: none;
            }
        }
    }
}
