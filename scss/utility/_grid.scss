@use "sass:math";

// provides both standard and -ms- prefixed grid-related properties.

@mixin display-grid {
    display: -ms-grid;
    display: grid;
}

@mixin grid-columns ($columns) {
    -ms-grid-columns: $columns;
    grid-template-columns: $columns;
}

@mixin grid-rows ($columns) {
    -ms-grid-rows: $columns;
    grid-template-rows: $columns;
}

@mixin grid-column-pick ($startTrack, $endTrack) {
    @if (($startTrack <= 0) or ($endTrack <= 0)) {
        @error "grid-column-pick expects non-negative and non-zero track values, but got (#{$startTrack}, #{$endTrack})";
    }
    @if ($endTrack <= $startTrack) {
        @error "grid-column-pick expects start and end tracks to be in order, but got (#{$startTrack}, #{$endTrack})";
    }

    $span: $endTrack - $startTrack;
    -ms-grid-column: $startTrack;
    -ms-grid-column-span: $span;

    // wrapping variables in #{} forces the / to be used as a separator, not operator.
    grid-column: #{$startTrack} / #{$endTrack};
}

@mixin grid-row-pick ($startTrack, $endTrack) {
    @if (($startTrack <= 0) or ($endTrack <= 0)) {
        @error "grid-row-pick expects non-negative and non-zero track values, but got (#{$startTrack}, #{$endTrack})";
    }
    @if ($endTrack <= $startTrack) {
        @error "grid-row-pick expects start and end tracks to be in order, but got (#{$startTrack}, #{$endTrack})";
    }

    $span: $endTrack - $startTrack;
    -ms-grid-row: $startTrack;
    -ms-grid-row-span: $span;
    grid-row: #{$startTrack} / #{$endTrack};
}
