@forward "netmatters";
@use "netmatters" as active-theme;
@use "../utility/breakpoints" as breakpoint;
@use "sass:map";
@use "sass:math";

@function get-colour-for-service($service) {
    @if (not map.has-key(active-theme.$service-colours, $service)) {
        @error "Service \"#{$service}\" must be a valid service name as listed in the theme";
    }
    @return map.get(active-theme.$service-colours, $service);
}

// note that $width-add is ignored for any breakpoint (but only that breakpoint)
// if its unit is not compatible with the unit used in $content-width-by-breakpoints
@mixin content-width-by-breakpoint($width-add: 0rem) {
    @each $breakpoint-name, $width in active-theme.$content-width-by-breakpoints {
        @include breakpoint.above-breakpoint($breakpoint-name) {

            // only attempt to add $width-add if it can be added to the $width for this breakpoint
            @if (math.compatible($width, $width-add)) {
                width: $width + $width-add;
            } else {
                width: $width;
            }
        }
    }
}
